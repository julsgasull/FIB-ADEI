# Chunk 4
calcQ <- function(x) { # Function to calculate the different quartiles
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr )
}
countNA <- function(x) { # Function to count the NA values
mis_x <- NULL
for (j in 1:ncol(x)) {mis_x[j] <- sum(is.na(x[,j])) }
mis_x <- as.data.frame(mis_x)
rownames(mis_x) <- names(x)
mis_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {mis_i <- mis_i + as.numeric(is.na(x[,j])) }
list(mis_col=mis_x,mis_ind=mis_i)
}
countX <- function(x,X) { # Function to count a specific number of appearences
n_x <- NULL
for (j in 1:ncol(x)) {n_x[j] <- sum(x[,j]==X) }
n_x <- as.data.frame(n_x)
rownames(n_x) <- names(x)
nx_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {nx_i <- nx_i + as.numeric(x[,j]==X) }
list(nx_col=n_x,nx_ind=nx_i)
}
# Chunk 5
setwd("~/Documents/uni/FIB-ADEI/Data and Questions for Quiz 1-20201110")
load("~/Documents/uni/FIB-ADEI/Data and Questions for Quiz 1-20201110/WasteWater.RData")
summary(df)
names(df)
length(df)
# Chunk 6
set.seed(10121)
sam<-as.vector(sample(1:nrow(df)))
# Chunk 7
head(df)
df<-df[sam,]
summary(df)
# Chunk 8
summary(df$fe.e)
sel_fe.e <- which(df$fe.e == 0)
df[sel_fe.e, "fe.e"] <- NA
summary(df$fe.e)
# Chunk 9
summary(df$qp.g)
sel_qp.g <- which(df$qp.g == 0)
df[sel_qp.g, "qp.g"] <- NA
summary(df$qp.g)
# Chunk 10
library(missMDA)
vars_to_impute <- names(df)[c(7,9)]
res.imputation<-imputePCA(df[,vars_to_impute],ncp=1)
summary(res.imputation$completeObs)
df[,vars_to_impute] <- res.imputation$completeObs
summary(df$fe.e)
summary(df$qp.g)
# Chunk 11
summary(df$dqo.s)
mean<-mean(df$dqo.s)
Boxplot(df$dqo.s)
var_out<-calcQ(df$dqo.s)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((df$dqo.s>150))
df[llout,"dqo.s"]<-mean
# Chunk 12
library(mvoutlier)
library(chemometrics)
names(df)
summary(df)
multivariant_outliers <- Moutlier(df[, c(4:44)], quantile = 0.995)
multivariant_outliers$cutoff
par(mfrow=c(1,1))
plot(multivariant_outliers$md, multivariant_outliers$rd, type="n")
text(multivariant_outliers$md, multivariant_outliers$rd, labels=rownames(df[, c(4:44)]))
abline(col="red",lwd=2, h=qchisq(0.995, ncol(df[, c(4:44)])))
# Chunk 13
vars_res<-names(df)[c(29)]
vars_quantitatives<-names(df)[c(4:28, 30:44)]
vars_categorical<-names(df)[c(45:46)]
res.condes <- condes(df[, c(vars_res,vars_quantitatives, vars_categorical)],1)
res.condes$quanti
res.condes$quali
res.condes$category
# f.dbo.s DBO 25 mg/l O2
table(df$dbo.s)
df$dbo.s[df$dbo.s <= 25] = 0
df$dbo.s[df$dbo.s > 25] = 1
df$f.dbo.s <- factor(df$dbo.s, labels =c("Legal","Ilegal"))
# f.dqo.s DQO 125 mg/l O2
table(df$dqo.s)
df$dqo.s[df$dqo.s <= 125] = 0
df$dqo.s[df$dqo.s > 125] = 1
df$f.dqo.s <- factor(df$dqo.s, labels =c("Legal","Ilegal"))
# f.sst.s 35 mg/l
df$sst.s=rowSums(cbind(df$ssv.s,df$ss.s),na.rm=TRUE)
table(df$sst.s)
df$dbo.s[df$sst.s <= 35] = 0
df$dbo.s[df$sst.s > 35] = 1
df$f.sst.s <- factor(df$sst.s, labels =c("Legal","Ilegal"))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Chunk 3
# Load Required Packages
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","dplyr","ggmap","ggthemes","knitr")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
lapply(requiredPackages, require, character.only = TRUE)
# Chunk 4
calcQ <- function(x) { # Function to calculate the different quartiles
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr )
}
countNA <- function(x) { # Function to count the NA values
mis_x <- NULL
for (j in 1:ncol(x)) {mis_x[j] <- sum(is.na(x[,j])) }
mis_x <- as.data.frame(mis_x)
rownames(mis_x) <- names(x)
mis_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {mis_i <- mis_i + as.numeric(is.na(x[,j])) }
list(mis_col=mis_x,mis_ind=mis_i)
}
countX <- function(x,X) { # Function to count a specific number of appearences
n_x <- NULL
for (j in 1:ncol(x)) {n_x[j] <- sum(x[,j]==X) }
n_x <- as.data.frame(n_x)
rownames(n_x) <- names(x)
nx_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {nx_i <- nx_i + as.numeric(x[,j]==X) }
list(nx_col=n_x,nx_ind=nx_i)
}
# Chunk 5
setwd("~/Documents/uni/FIB-ADEI/Data and Questions for Quiz 1-20201110")
load("~/Documents/uni/FIB-ADEI/Data and Questions for Quiz 1-20201110/WasteWater.RData")
summary(df)
names(df)
length(df)
# Chunk 6
set.seed(10121)
sam<-as.vector(sample(1:nrow(df)))
# Chunk 7
head(df)
df<-df[sam,]
summary(df)
# Chunk 8
summary(df$fe.e)
sel_fe.e <- which(df$fe.e == 0)
df[sel_fe.e, "fe.e"] <- NA
summary(df$fe.e)
# Chunk 9
summary(df$qp.g)
sel_qp.g <- which(df$qp.g == 0)
df[sel_qp.g, "qp.g"] <- NA
summary(df$qp.g)
# Chunk 10
library(missMDA)
vars_to_impute <- names(df)[c(7,9)]
res.imputation<-imputePCA(df[,vars_to_impute],ncp=1)
summary(res.imputation$completeObs)
df[,vars_to_impute] <- res.imputation$completeObs
summary(df$fe.e)
summary(df$qp.g)
# Chunk 11
summary(df$dqo.s)
mean<-mean(df$dqo.s)
Boxplot(df$dqo.s)
var_out<-calcQ(df$dqo.s)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((df$dqo.s>150))
df[llout,"dqo.s"]<-mean
# Chunk 12
library(mvoutlier)
library(chemometrics)
names(df)
summary(df)
multivariant_outliers <- Moutlier(df[, c(4:44)], quantile = 0.995)
multivariant_outliers$cutoff
par(mfrow=c(1,1))
plot(multivariant_outliers$md, multivariant_outliers$rd, type="n")
text(multivariant_outliers$md, multivariant_outliers$rd, labels=rownames(df[, c(4:44)]))
abline(col="red",lwd=2, h=qchisq(0.995, ncol(df[, c(4:44)])))
# Chunk 13
vars_res<-names(df)[c(29)]
vars_quantitatives<-names(df)[c(4:28, 30:44)]
vars_categorical<-names(df)[c(45:46)]
res.condes <- condes(df[, c(vars_res,vars_quantitatives, vars_categorical)],1)
res.condes$quanti
res.condes$quali
res.condes$category
# f.dbo.s DBO 25 mg/l O2
table(df$dbo.s)
df$dbo.s[df$dbo.s <= 25] = 0
df$dbo.s[df$dbo.s > 25] = 1
df$f.dbo.s <- factor(df$dbo.s, labels =c("Legal","Ilegal"))
# f.dqo.s DQO 125 mg/l O2
table(df$dqo.s)
df$dqo.s[df$dqo.s <= 125] = 0
df$dqo.s[df$dqo.s > 125] = 1
df$f.dqo.s <- factor(df$dqo.s, labels =c("Legal","Ilegal"))
# f.sst.s 35 mg/l
df$sst.s=rowSums(cbind(df$ssv.s,df$ss.s),na.rm=TRUE)
table(df$sst.s)
df$sst.s[df$sst.s <= 35] = 0
df$sst.s[df$sst.s > 35] = 1
df$f.sst.s <- factor(df$sst.s, labels =c("Legal","Ilegal"))
f.sst.s
df$f.sst.s
names(df)
vars_res<-names(df)[c(48)]
vars_quantitatives<-names(df)[c(4:44)]
vars_categorical<-names(df)[c(45:47, 49:50)]
res.catdes <- catdes(df[, c(vars_res,vars_quantitatives, vars_categorical)],1)
vars_res<-names(df)[c(48)]
vars_quantitatives<-names(df)[c(4:44)]
vars_categorical<-names(df)[c(45:47, 49:50)]
res.catdes <- catdes(df[, c(vars_res,vars_quantitatives, vars_categorical)],1)
res.catdes$test.chi2
res.catdes$quanti.var
res.catdes$category
names(df)
names(df)
res.pca <- PCA(df[, c(4:44)], quanti.sup=c(26:33), quali.sup=c(47:48, 50))
res.pca <- PCA(df[, c(4:50)], quanti.sup=c(26:33), quali.sup=c(47:48, 50))
res.pca <- PCA(df[, c(4:44, 47:48, 50)], quanti.sup=c(26:33), quali.sup=c(47:48, 50))
res.pca <- PCA(df[, c(4:44)], quanti.sup=c(26:33), quali.sup=c(47:48, 50))
names(df)
res.pca <- PCA(df[, c(4:44, 47:48, 50)], quanti.sup=c(26:33), quali.sup=c(47:48, 50))
res.pca <- PCA(df[, c(4:44, 47:48, 50)], quanti.sup=c(26:33), quali.sup=c(47:48,50))
df[, c(4:44, 47:48, 50)
c(4:44, 47:48, 50)],
df[, c(4:44, 47:48, 50)]
names(df[, c(4:44, 47:48, 50)])
res.pca <- PCA(df[, c(4:44, 47:48, 50)], quanti.sup=c(1:41), quali.sup=c(42:44))
names(df)
res.pca <- PCA(df[, c(4:44, 47:48, 50)], quanti.sup=c(1:41), quali.sup=c(42:44))
res.pca <- PCA(df[, c(4:44, 47:48)], quanti.sup=c(1:41), quali.sup=c(42:44))
res.pca <- PCA(df[, c(4:44, 47:48)], quanti.sup=c(1:41), quali.sup=c(42:43))
names(df)[c(4:30,32:36,40,45:46)] # Vars to be considered
res.pca <- PCA(df[, c(4:44, 47:48, 50)], quanti.sup=c(1:41), quali.sup=c(42:44))
names(df)
df[, c(4:30,32:36,40,45:46)
names(df[, c(4:30,32:36,40,45:46)])
res.pca <- PCA(df[, c(4:30,32:36,40,45:46)], quanti.sup=c(23:29), quali.sup=c(34:35))
summary(res.pca,nbind=0,nbelements = 25)
fviz_screeplot(
res.pca,
barfill = "darkslateblue",
barcolor = "darkslateblue",
linecolor = "red",
ggtheme = theme_gray())
summary(res.pca,nb.dec=2,nbind=0,nbelements = 25,ncp=2)
ddd<-dimdesc(res.pca,axes=1:2)
ddd$Dim.1
ddd$Dim.2
# 6 dimensions have to be selected according to Kaiser's criteria
res.pca <- PCA(df[, c(4:30,32:36,40,45:46)], quanti.sup=c(23:29), quali.sup=c(34:35))
res.hcpc <- HCPC(res.pca,nb.clust=-1, graph=T)
res.hcpc$desc.var
(res.hcpc$call$t$within[1]-res.hcpc$call$t$within[3])/res.hcpc$call$t$within[1] # representació de la inèrcia
library(mvoutlier)
library(chemometrics)
names(df)
summary(df)
multivariant_outliers <- Moutlier(df[, c(4:44)], quantile = 0.995)
multivariant_outliers$cutoff
par(mfrow=c(1,1))
plot(multivariant_outliers$md, multivariant_outliers$rd, type="n")
text(multivariant_outliers$md, multivariant_outliers$rd, labels=rownames(df[, c(4:44)]))
abline(col="red",lwd=2, h=qchisq(0.995, ncol(df[, c(4:44)])))
names(df)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Chunk 3
# Load Required Packages
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","dplyr","ggmap","ggthemes","knitr")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
lapply(requiredPackages, require, character.only = TRUE)
# Chunk 4
calcQ <- function(x) { # Function to calculate the different quartiles
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr )
}
countNA <- function(x) { # Function to count the NA values
mis_x <- NULL
for (j in 1:ncol(x)) {mis_x[j] <- sum(is.na(x[,j])) }
mis_x <- as.data.frame(mis_x)
rownames(mis_x) <- names(x)
mis_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {mis_i <- mis_i + as.numeric(is.na(x[,j])) }
list(mis_col=mis_x,mis_ind=mis_i)
}
countX <- function(x,X) { # Function to count a specific number of appearences
n_x <- NULL
for (j in 1:ncol(x)) {n_x[j] <- sum(x[,j]==X) }
n_x <- as.data.frame(n_x)
rownames(n_x) <- names(x)
nx_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {nx_i <- nx_i + as.numeric(x[,j]==X) }
list(nx_col=n_x,nx_ind=nx_i)
}
# Chunk 5
setwd("~/Documents/uni/FIB-ADEI/Data and Questions for Quiz 1-20201110")
load("~/Documents/uni/FIB-ADEI/Data and Questions for Quiz 1-20201110/WasteWater.RData")
summary(df)
names(df)
length(df)
# Chunk 6
set.seed(10121)
sam<-as.vector(sample(1:nrow(df)))
# Chunk 7
head(df)
df<-df[sam,]
summary(df)
# Chunk 8
summary(df$fe.e)
sel_fe.e <- which(df$fe.e == 0)
df[sel_fe.e, "fe.e"] <- NA
summary(df$fe.e)
# Chunk 9
summary(df$qp.g)
sel_qp.g <- which(df$qp.g == 0)
df[sel_qp.g, "qp.g"] <- NA
summary(df$qp.g)
# Chunk 10
library(missMDA)
vars_to_impute <- names(df)[c(7,9)]
res.imputation<-imputePCA(df[,vars_to_impute],ncp=1)
summary(res.imputation$completeObs)
df[,vars_to_impute] <- res.imputation$completeObs
summary(df$fe.e)
summary(df$qp.g)
# Chunk 11
summary(df$dqo.s)
mean<-mean(df$dqo.s)
Boxplot(df$dqo.s)
var_out<-calcQ(df$dqo.s)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((df$dqo.s>150))
df[llout,"dqo.s"]<-mean
names(df)
df[which(row.names(df)=="157"), 1:46]
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Chunk 3
# Load Required Packages
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","dplyr","ggmap","ggthemes","knitr")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
lapply(requiredPackages, require, character.only = TRUE)
# Chunk 4
calcQ <- function(x) { # Function to calculate the different quartiles
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr )
}
countNA <- function(x) { # Function to count the NA values
mis_x <- NULL
for (j in 1:ncol(x)) {mis_x[j] <- sum(is.na(x[,j])) }
mis_x <- as.data.frame(mis_x)
rownames(mis_x) <- names(x)
mis_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {mis_i <- mis_i + as.numeric(is.na(x[,j])) }
list(mis_col=mis_x,mis_ind=mis_i)
}
countX <- function(x,X) { # Function to count a specific number of appearences
n_x <- NULL
for (j in 1:ncol(x)) {n_x[j] <- sum(x[,j]==X) }
n_x <- as.data.frame(n_x)
rownames(n_x) <- names(x)
nx_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {nx_i <- nx_i + as.numeric(x[,j]==X) }
list(nx_col=n_x,nx_ind=nx_i)
}
# Chunk 5
setwd("~/Documents/uni/FIB-ADEI/Data and Questions for Quiz 1-20201110")
load("~/Documents/uni/FIB-ADEI/Data and Questions for Quiz 1-20201110/WasteWater.RData")
summary(df)
names(df)
length(df)
# Chunk 6
set.seed(10121)
sam<-as.vector(sample(1:nrow(df)))
# Chunk 7
head(df)
df<-df[sam,]
summary(df)
# Chunk 8
summary(df$fe.e)
sel_fe.e <- which(df$fe.e == 0)
df[sel_fe.e, "fe.e"] <- NA
summary(df$fe.e)
# Chunk 9
summary(df$qp.g)
sel_qp.g <- which(df$qp.g == 0)
df[sel_qp.g, "qp.g"] <- NA
summary(df$qp.g)
# Chunk 10
library(missMDA)
vars_to_impute <- names(df)[c(7,9)]
res.imputation<-imputePCA(df[,vars_to_impute],ncp=1)
summary(res.imputation$completeObs)
df[,vars_to_impute] <- res.imputation$completeObs
summary(df$fe.e)
summary(df$qp.g)
# Chunk 11
summary(df$dqo.s)
mean<-mean(df$dqo.s)
Boxplot(df$dqo.s)
var_out<-calcQ(df$dqo.s)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((df$dqo.s>150))
df[llout,"dqo.s"]<-mean
# Chunk 12
library(mvoutlier)
library(chemometrics)
names(df)
summary(df)
multivariant_outliers <- Moutlier(df[, c(4:44)], quantile = 0.995)
multivariant_outliers$cutoff
par(mfrow=c(1,1))
plot(multivariant_outliers$md, multivariant_outliers$rd, type="n")
text(multivariant_outliers$md, multivariant_outliers$rd, labels=rownames(df[, c(4:44)]))
abline(col="red",lwd=2, h=qchisq(0.995, ncol(df[, c(4:44)])))
# Chunk 13
df[which(row.names(df)=="157"), 1:46]
# Chunk 14
vars_res<-names(df)[c(29)]
vars_quantitatives<-names(df)[c(4:28, 30:44)]
vars_categorical<-names(df)[c(45:46)]
res.condes <- condes(df[, c(vars_res,vars_quantitatives, vars_categorical)],1)
res.condes$quanti
res.condes$quali
res.condes$category
# Chunk 15
# f.dbo.s DBO 25 mg/l O2
table(df$dbo.s)
df$dbo.s[df$dbo.s <= 25] = 0
df$dbo.s[df$dbo.s > 25] = 1
df$f.dbo.s <- factor(df$dbo.s, labels =c("Legal","Ilegal"))
# f.dqo.s DQO 125 mg/l O2
table(df$dqo.s)
df$dqo.s[df$dqo.s <= 125] = 0
df$dqo.s[df$dqo.s > 125] = 1
df$f.dqo.s <- factor(df$dqo.s, labels =c("Legal","Ilegal"))
# f.sst.s 35 mg/l
df$sst.s=rowSums(cbind(df$ssv.s,df$ss.s),na.rm=TRUE)
table(df$sst.s)
df$sst.s[df$sst.s <= 35] = 0
df$sst.s[df$sst.s > 35] = 1
df$f.sst.s <- factor(df$sst.s, labels =c("Legal","Ilegal"))
# Chunk 16
vars_res<-names(df)[c(48)]
vars_quantitatives<-names(df)[c(4:44)]
vars_categorical<-names(df)[c(45:47, 50)]
res.catdes <- catdes(df[, c(vars_res,vars_quantitatives, vars_categorical)],1)
res.catdes$test.chi2
res.catdes$quanti.var
res.catdes$category
# Chunk 17
names(df)
names(df[, c(4:30,32:36,40,45:46)])
res.pca <- PCA(df[, c(4:30,32:36,40,45:46)], quanti.sup=c(23:29), quali.sup=c(34:35))
summary(res.pca,nbind=0,nbelements = 25)
fviz_screeplot(
res.pca,
barfill = "darkslateblue",
barcolor = "darkslateblue",
linecolor = "red",
ggtheme = theme_gray())
# Chunk 18
summary(res.pca,nb.dec=2,nbind=0,nbelements = 25,ncp=2)
ddd<-dimdesc(res.pca,axes=1:2)
ddd$Dim.1
ddd$Dim.2
# 6 dimensions have to be selected according to Kaiser's criteria
res.pca <- PCA(df[, c(4:30,32:36,40,45:46)], quanti.sup=c(23:29), quali.sup=c(34:35))
res.hcpc <- HCPC(res.pca,nb.clust=6, graph=T)
res.hcpc$desc.var
(res.hcpc$call$t$within[1]-res.hcpc$call$t$within[3])/res.hcpc$call$t$within[1] # representació de la inèrcia
(res.hcpc$call$t$within[1]-res.hcpc$call$t$within[6])/res.hcpc$call$t$within[1] # representació de la inèrcia
# 6 dimensions have to be selected according to Kaiser's criteria
res.pca <- PCA(df[, c(4:30,32:36,40,45:46)], quanti.sup=c(23:29), quali.sup=c(34:35))
res.hcpc <- HCPC(res.pca,nb.clust=7, graph=T)
res.hcpc$desc.var
(res.hcpc$call$t$within[1]-res.hcpc$call$t$within[7])/res.hcpc$call$t$within[1] # representació de la inèrcia
