###### Passenger_count #######
##############################
summary(df$Passenger_count)
df[which(df[,"Passenger_count"]==0),]
sel<-which(df$Passenger_count ==0)
ierrs[sel]<-ierrs[sel]+1
names(df)
jerrs[10]<-length(sel)
sel                 #### sel contains the rownames of the individuals with "0"
#                        as  value for longitude
df[sel,"Passenger_count"]<-NA    # non-possible values are replaced by NA, missing value symbol in R
##############################
###### Trip_distance #########
##############################
summary(df$Trip_distance)
df[which(df[,"Trip_distance"]==0),]
sel<-which(df$Trip_distance ==0)
ierrs[sel]<-ierrs[sel]+1
names(df)
jerrs[11]<-length(sel)
sel                 #### sel contains the rownames of the individuals with "0"
#                        as  value for longitude
df[sel,"Trip_distance"]<-NA    # non-possible values are replaced by NA, missing value symbol in R
# Outlier detection
Boxplot(df$Trip_distance)
var_out<-calcQ(df$Trip_distance)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=30,col="blue",lwd=2)
llout<-which((df$Trip_distance<0)|(df$Trip_distance>30))
iouts[llout]<-iouts[llout]+1
jouts[19]<-length(llout)
df[llout,"Trip_distance"]<-NA
##############################
##############################
##############################
########### Extra ############
##############################
##############################
### MTA_tax ####
##############################
##############################
### Tip_amount ####
##############################
##############################
### Ehail_fee ####
##############################
################ NO LA TENIM EN COMPTE PERQUÈ ÉS NA
##############################
### improvement_surcharge ####
##############################
##############################
### Payment_type ####
##############################
##############################
### Trip_type ####
##############################
Boxplot(df$Trip_distance)
############################## # Miscellaneous extras and surcharges.
########### Extra ############ # Currently, this only includes the $0.50
############################## # and $1 rush hour and overnight charges.
summary(df$Extra)
df[which(df[,"Extra"]!=0.5),df[,"Extra"]!=1.0),]
df[which(df[, "Extra"] < 0.5)]
df[which(df[, "Extra"] < 0.5),]
df[which(df[, "Extra"] < 0.5),]
sel<-which(df$Extra < 0.5)
ierrs[sel]<-ierrs[sel]+1
names(df)
jerrs[13]<-length(sel)
sel
df[sel,"Extra"]<-NA
summary
############################## # Miscellaneous extras and surcharges.
########### Extra ############ # Currently, this only includes the $0.50
############################## # and $1 rush hour and overnight charges.
summary(df$Extra)
##############################
######## Fare_amount #########
##############################
summary(df$Fare_amount)
##############################
######## Fare_amount #########
##############################
summary(df$Fare_amount)
df[which(df[,"Fare_amount"]<0),]
# Outlier detection
Boxplot(df$Fare_amount)
var_out<-calcQ(df$Fare_amount)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=120,col="blue",lwd=2)
llout<-which((df$Fare_amount<0)|(df$Fare_amount>120))
iouts[llout]<-iouts[llout]+1
names(df)
jouts[12]<-length(llout)
df[llout,"Fare_amount"]<-NA
sel
##############################
######## Fare_amount #########
##############################
summary(df$Fare_amount)
df[which(df[,"Fare_amount"]<0),]
# Outlier detection
Boxplot(df$Fare_amount)
setwd("~/Documents/uni/FIB-ADEI/lab1")
# Load Required Packages: to be increased over the course
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","ggplot2","dplyr","ggmap","ggthemes","knitr")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
lapply(requiredPackages, require, character.only = TRUE)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
setwd("~/Documents/uni/FIB-ADEI/lab1")
filepath<-"~/Documents/uni/FIB-ADEI/lab1"
# green_tripdata_2016-01
#### A suprimir
df<-read.table(paste0(filepath,"/green_tripdata_2016-01.csv"),header=T, sep=",")
dim(df)
names(df)
### Use birthday of 1 member of the group
set.seed(180998)
sam<-as.vector(sort(sample(1:nrow(df),5000)))
head(df)
df<-df[sam,]
summary(df)
save.image("Taxi5000_raw.RData")
#####
### Load last workspace
# Some useful functions
calcQ <- function(x) {
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr ) }
countNA <- function(x) {
mis_x <- NULL
for (j in 1:ncol(x)) {mis_x[j] <- sum(is.na(x[,j])) }
mis_x <- as.data.frame(mis_x)
rownames(mis_x) <- names(x)
mis_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {mis_i <- mis_i + as.numeric(is.na(x[,j])) }
list(mis_col=mis_x,mis_ind=mis_i) }
countX <- function(x,X) {
n_x <- NULL
for (j in 1:ncol(x)) {n_x[j] <- sum(x[,j]==X) }
n_x <- as.data.frame(n_x)
rownames(n_x) <- names(x)
nx_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {nx_i <- nx_i + as.numeric(x[,j]==X) }
list(nx_col=n_x,nx_ind=nx_i) }
summary(df)
names(df)
df$VendorID<-factor(df$VendorID,labels=c("Mobile","VeriFone"))
nlevels(df$VendorID)
levels(df$VendorID)<-paste0("f.Vendor-",levels(df$VendorID))
df$Trip_type<-factor(df$Trip_type,labels=c("Street-Hail","Dispatch"))
df$Payment_type<-factor(df$Payment_type,labels=c("Credit card","Cash","No charge","Dispute"))
summary(df$Payment_type)
## només em quedo amb les hores
df$pickup<-substr(strptime(df$lpep_pickup_datetime, "%Y-%m-%d %H:%M:%S"), 12, 13)
df$dropoff<-substr(strptime(df$Lpep_dropoff_datetime, "%Y-%m-%d %H:%M:%S"), 12, 13)
# Remove uninformative variable from data.frame
#######################################################
imis<-rep(0,nrow(df))  # rows - trips
jmis<-rep(0,2*ncol(df))  # columns - variables
######################################################
mis1<-countNA(df)
imis<-mis1$mis_ind
mis1$mis_col # Number of missings for the current set of variables
#######################################################
iouts<-rep(0,nrow(df))  # rows - trips
jouts<-rep(0,2*ncol(df))  # columns - variables
######################################################
#######################################################
ierrs<-rep(0,nrow(df))  # rows - trips
jerrs<-rep(0,2*ncol(df))  # columns - variables
######################################################
##############################
########## VendorID ##########
##############################
summary(df$VendorID)
# It is a categoricla variable   NO PROBLEM
##############################
##### Store_and_fwd_flag #####
##############################
####   Variable df$Store_and_fwd_flag
summary(df$Store_and_fwd_flag)
df$Store_and_fwd_flag<-factor(df$Store_and_fwd_flag)
# It is a categorical(=factor) variable   NO PROBLEM but not any interest
##############################
######### RateCodeID #########
##############################
####   Variable df$RateCodeID. Consider Recoding to fewer levels
summary(df$RateCodeID)
df$RateCodeID<-factor(df$RateCodeID)
# It is a categorical(=factor) variable   NO PROBLEM but not any interest
df$f.Rate<-1  # rep(1,nrow(df))
ll<-which(df$RateCodeID != "1");length(ll)
df$f.Rate[ll]<-2
df$f.Rate<-factor(df$f.Rate,levels=1:2,labels=c("f.Rate-1","f.Rate-Other"))
summary(df$f.Rate)
##############################
###### Pickup_longitude ######
##############################
####   Variable df$Pickup_longitude
summary(df$Pickup_longitude)
# 0.00 looks to be an error
# Seeing the individuals with this "0" value:
df[which(df[,"Pickup_longitude"]==0),]
# It is a quantitive variable  Non-possible values will be recoded to NA
sel<-which(df$Pickup_longitude ==0)
ierrs[sel]<-ierrs[sel]+1
names(df)
jerrs[6]<-length(sel)
sel                 #### sel contains the rownames of the individuals with "0"
#                        as  value for longitude
df[sel,"Pickup_longitude"]<-NA    # non-possible values are replaced by NA, missing value symbol in R
##### Which trips are not running in New-York?
#####
# Consider if, at least, one of the pick-up and drop-off points belong to New-York
# area. If not, this trip is an "out-of-scope" individual and has to be eliminated
# of the basis. Nevertheless, you have to justify this elimimation and count how many
# individuals were in this situation
# Look at that!! Possibly, starting from the outliers...
# "0" is missing value, outliers can help to detect trips running outside of New York...
##############################
######## Total_amount ########
##############################
summary(df$Total_amount)
# negative values seem to be errors - 0 Total_amount is possible when Payment_type =="No charge"
llsel<-rownames(df[which(df[,"Total_amount"]<0),])
# there are not "no charge", so they are also "errors"
# It is a quantitive variable  Non-possible values will be recoded to NA
sel<-which(df$Total_amount<0)
if (length(sel)>0) {
ierrs[sel]<-ierrs[sel]+1
jerrs[19]<-length(sel)
}
sel                 #### sel contains the rownames of the individuals with "0"
#                        as  value for longitude
df[sel,"Total_amount"]<-NA    # non-possible values are replaced by NA, missing value symbol in R
# Outlier detection
Boxplot(df$Total_amount)
var_out<-calcQ(df$Total_amount)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=120,col="blue",lwd=2)
llout<-which((df$Total_amount<0)|(df$Total_amount>120))
iouts[llout]<-iouts[llout]+1
jouts[19]<-length(llout)
df[llout,"Total_amount"]<-NA
##############################
#### lpep_pickup_datetime ####
##############################
### ja l'hem passat a pickup
##############################
### Lpep_dropoff_datetime ####
##############################
### ja l'hem passat a dropoff
##############################
###### Pickup_latitude #######
##############################
####   Variable df$Pickup_longitude
summary(df$Pickup_latitude)
# 0.00 looks to be an error
# Seeing the individuals with this "0" value:
df[which(df[,"Pickup_latitude"]==0),]
# It is a quantitive variable  Non-possible values will be recoded to NA
sel<-which(df$Pickup_latitude ==0)
ierrs[sel]<-ierrs[sel]+1
names(df)
jerrs[7]<-length(sel)
sel                 #### sel contains the rownames of the individuals with "0"
#                        as  value for longitude
df[sel,"Pickup_latitude"]<-NA    # non-possible values are replaced by NA, missing value symbol in R
##############################
### Dropoff_longitude ####
##############################
####   Variable df$Dropoff_longitude
summary(df$Dropoff_longitude)
# 0.00 looks to be an error
# Seeing the individuals with this "0" value:
df[which(df[,"Dropoff_longitude"]==0),]
# It is a quantitive variable  Non-possible values will be recoded to NA
sel<-which(df$Dropoff_longitude ==0)
ierrs[sel]<-ierrs[sel]+1
names(df)
jerrs[8]<-length(sel)
sel                 #### sel contains the rownames of the individuals with "0"
#                        as  value for longitude
df[sel,"Dropoff_longitude"]<-NA    # non-possible values are replaced by NA, missing value symbol in R
##############################
### Dropoff_latitude ####
##############################
####   Variable df$Dropoff_latitude
summary(df$Dropoff_latitude)
# 0.00 looks to be an error
# Seeing the individuals with this "0" value:
df[which(df[,"Dropoff_latitude"]==0),]
# It is a quantitive variable  Non-possible values will be recoded to NA
sel<-which(df$Dropoff_latitude ==0)
ierrs[sel]<-ierrs[sel]+1
names(df)
jerrs[9]<-length(sel)
sel                 #### sel contains the rownames of the individuals with "0"
#                        as  value for longitude
df[sel,"Dropoff_latitude"]<-NA    # non-possible values are replaced by NA, missing value symbol in R
##############################
###### Passenger_count #######
##############################
summary(df$Passenger_count)
df[which(df[,"Passenger_count"]==0),]
sel<-which(df$Passenger_count ==0)
ierrs[sel]<-ierrs[sel]+1
names(df)
jerrs[10]<-length(sel)
sel                 #### sel contains the rownames of the individuals with "0"
#                        as  value for longitude
df[sel,"Passenger_count"]<-NA    # non-possible values are replaced by NA, missing value symbol in R
##############################
###### Trip_distance #########
##############################
summary(df$Trip_distance)
df[which(df[,"Trip_distance"]==0),]
# Outlier detection
Boxplot(df$Trip_distance)
var_out<-calcQ(df$Trip_distance)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=30,col="blue",lwd=2)
llout<-which((df$Trip_distance<0)|(df$Trip_distance>30))
iouts[llout]<-iouts[llout]+1
jouts[11]<-length(llout)
df[llout,"Trip_distance"]<-NA
sel
##############################
######## Fare_amount #########
##############################
summary(df$Fare_amount)
df[which(df[,"Fare_amount"]<0),]
# Outlier detection
Boxplot(df$Fare_amount)
var_out<-calcQ(df$Fare_amount)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=120,col="blue",lwd=2)
llout<-which((df$Fare_amount<0)|(df$Fare_amount>120))
iouts[llout]<-iouts[llout]+1
jouts[12]<-length(llout)
df[llout,"Fare_amount"]<-NA
sel
############################## # Miscellaneous extras and surcharges.
########### Extra ############ # Currently, this only includes the $0.50
############################## # and $1 rush hour and overnight charges.
summary(df$Extra)
df[which(df[, "Extra"] < 0),]
sel<-which(df$Extra < 0)
ierrs[sel]<-ierrs[sel]+1
names(df)
jerrs[13]<-length(sel)
df[sel,"Extra"]<-NA
sel
##############################
### MTA_tax ####
##############################
##############################
### Tip_amount ####
##############################
##############################
### Ehail_fee ####
##############################
################ NO LA TENIM EN COMPTE PERQUÈ ÉS NA
##############################
### improvement_surcharge ####
##############################
##############################
### Payment_type ####
##############################
##############################
### Trip_type ####
##############################
##############################
########## MTA_tax ###########
##############################
summary(df$MTA_tax)
names(df)
##############################
########## MTA_tax ###########
##############################
summary(df$MTA_tax)
df[which(df[, "MTA_tax"] < 0),]
sel<-which(df$MTA_tax < 0)
ierrs[sel]<-ierrs[sel]+1
names(df)
jerrs[14]<-length(sel)
df[sel,"MTA_tax"]<-NA
sel
##############################
########## MTA_tax ###########
##############################
summary(df$MTA_tax)
############################## This field is automatically populated for
######### Tip_amount ######### credit card tips. Cash tips are not included.
##############################
summary(df$Tip_amount)
# Outlier detection
Boxplot(df$Tip_amount)
var_out<-calcQ(df$Tip_amount)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
ar_out$sout
var_out$sout
var_out$souts
abline(h=25,col="blue",lwd=2)
llout<-which((df$Tip_amount<0)|(df$Tip_amount>25))
iouts[llout]<-iouts[llout]+1
names(df)
jouts[16]<-length(llout)
df[llout,"Tip_amount"]<-NA
sel
# Outlier detection
Boxplot(df$Tip_amount)
############################## $0.30 improvement surcharge assessed on hailed
### improvement_surcharge #### trips at the flag drop. The improvement
############################## surcharge began being levied in 2015.
summary(df$improvement_surcharge)
df[which(df[, "MTA_tax"] < 0.3),]
df[which(df[, "improvement_surcharge"] < 0.3),]
df[which(df[, "improvement_surcharge"] < 0),]
names(df)
############################## $0.30 improvement surcharge assessed on hailed
### improvement_surcharge #### trips at the flag drop. The improvement
############################## surcharge began being levied in 2015.
summary(df$improvement_surcharge)
df[which(df[, "improvement_surcharge"] < 0),]
sel<-which(df$improvement_surcharge < 0)
ierrs[sel]<-ierrs[sel]+1
names(df)
jerrs[18]<-length(sel)
df[sel,"improvement_surcharge"]<-NA
sel
############################## $0.30 improvement surcharge assessed on hailed
### improvement_surcharge #### trips at the flag drop. The improvement
############################## surcharge began being levied in 2015.
summary(df$improvement_surcharge)
##############################
######### Payment_type #######
##############################
summary(df$Payment_type)
##############################
### Trip_type ####
##############################
summary(df$Trip_type)
# Trip length in km
df$tlenkm<-df$Trip_distance*1.609344 # Miles to km
df$tlenkm
l
df$traveltime<
df$traveltime
summary(df$traveltime)
# Travel time in min
df$traveltime<-(as.numeric(as.POSIXct(df$Lpep_dropoff_datetime)) - as.numeric(as.POSIXct(df$lpep_pickup_datetime)))/60
summary(df$traveltime)
df$traveltime
# Effective speed (km/h)
df$espeed<-(df$tlenkm/(df$traveltime))*60
# Missing data
sel<-which(is.na(df$espeed<=0));length(sel)
imis[sel]<-imis[sel]+1
jmis[26]<-length(sel)
# Error detection
summary(df$espeed)
sel<-which((df$espeed<=0)|(df$espeed=="Inf"))
ierrs[sel]<-ierrs[sel]+1
jerrs[26]<-length(sel)
sel                 #### sel contains the rownames of the individuals with "0"
#                        as  value for longitude
df[sel,"espeed"]<-NA
# Check outliers
summary(df$espeed)
calcQ(df$espeed)
# Outlier detection
Boxplot(df$espeed)
var_out<-calcQ(df$espeed)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((df$espeed<=3)|(df$espeed>80))
iouts[llout]<-iouts[llout]+1
jouts[26]<-length(llout)
df[llout,"espeed"]<-NA
# Outlier detection
Boxplot(df$espeed)
df$hour<-as.numeric(substr(strptime(df$lpep_pickup_datetime, "%Y-%m-%d %H:%M:%S"),12,13))
df$period<-1
df$period[df$hour>7]<-2
df$period[df$hour>10]<-3
df$period[df$hour>16]<-4
df$period[df$hour>19]<-1
df$period<-factor(df$period,labels=paste("Period",c("night","morning","valley","afternoon")))
df$period
library(missMDA)
# Now one by one describe vars and put them on lists
names(df)
vars_con<-names(df)[c(10:16,18,23:25)]
vars_dis<-names(df)[c(1,4,5,20:21)]
vars_res<-names(df)[c(19)]
summary(df[,vars_con])
res.impca<-imputePCA(df[,vars_con],ncp=10)
